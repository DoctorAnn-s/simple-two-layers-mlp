import os
import buildConfig
#get options and set default value
debug = ARGUMENTS.get('debug', 1)

import os
import buildConfig
#get options and set default value
debug = ARGUMENTS.get('debug', 1)

class LayerTestBuildConfig(buildConfig.buildConfig):
    def __init__(self, isDebug):
        super().__init__(isDebug)
        self.incDirs.append("..")
        self.linkDir.append(["/home/robin/installFromSource/boost_1_72_0/stage/lib","/home/robin/RLDNN/simple-two-layers-mlp/Layers"])
        self.linkOpt.append("boost_unit_test_framework")

config = LayerTestBuildConfig(debug)

testCaseNames=["activation"]
#,"base","pooling","affine","convolution"
testCaseSrcs = list(map(lambda x: x+"Test.cpp",testCaseNames))
if int(debug)==1:
    testTargetNames=list(map(lambda x: x+"Debug.run",testCaseSrcs))
else:
    testTargetNames=list(map(lambda x: x+"Release.run",testCaseSrcs))

targetSrcsMap = dict(zip(testTargetNames, testCaseSrcs))

testEnv =  Environment(CXX=config.CXX, CCFLAGS=config.CCFLAGS, CPPPATH=config.incDirs,
    CPPDEFINES=config.preDifines,ENV = {'PATH' : os.environ['PATH']})
print ("Start compiling test")
for targetName in targetSrcsMap:
    print("Compiling " +targetName)
    testEnv.Program(target = targetName, source = targetSrcsMap[targetName],LIBS=config.linkOpt, LIBPATH=config.linkDir)

